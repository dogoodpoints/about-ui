user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;
    client_header_timeout 65;
    client_body_timeout 65;

    gzip on;
    gzip_comp_level 5;
    gzip_http_version 1.1;
    gzip_min_length 5120;
    gzip_types application/atom+xml application/javascript application/x-javascript application/json application/rss+xml application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/svg+xml image/x-icon text/css text/plain text/x-component;
    gzip_proxied any;
    gzip_vary on;

    #include /etc/nginx/conf.d/*.conf;

    server {
        listen 80;
        server_name localhost;

        if ($http_x_forwarded_proto = 'http'){
            return 301 https://$host$request_uri;
        }

        root /usr/share/nginx/html;

        location /app {
            try_files $uri /index.html;
            expires -1;
        }

        location ^~ /public/ {
            root /usr/share/nginx/html;
        }

        location ^~ /images/ {
            root /usr/share/nginx/html/public;
        }

        location = /index.html {
            expires 30s;
        }

        location = /health_check.html {
            access_log off;
            expires -1;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        location ~* \.(?:css|js)$ {
            access_log        off;
            log_not_found     off;
            add_header        Cache-Control "no-cache, public, must-revalidate, proxy-revalidate";
        }

        location ~* \.(?:jpg|jpeg|gif|png|ico|xml|svg)$ {
            access_log        off;
            log_not_found     off;
            expires           5m;
            add_header        Cache-Control "public";
        }

        location ~* \.(?:eot|woff|woff2|ttf|otf|json|svg)$ {
           access_log        off;
           log_not_found     off;
           expires           5m;
           add_header        Cache-Control "public";

           # allow CORS requests
           add_header        Access-Control-Allow-Origin *;

           types     {font/opentype otf;}
           types     {application/vnd.ms-fontobject eot;}
           types     {font/truetype ttf;}
           types     {application/font-woff woff;}
           types     {font/x-woff woff2;}
           types     {image/svg+xml svg;}
           types     {application/json json;}
        }
    }
}
